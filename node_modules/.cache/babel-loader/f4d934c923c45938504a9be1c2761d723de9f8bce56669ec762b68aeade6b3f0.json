{"ast":null,"code":"var _s = $RefreshSig$();\n// PlotPickerLogic.js\nimport { useState, useEffect } from 'react';\nexport const usePlotPickerLogic = carSize => {\n  _s();\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\n  const [parkingData, setParkingData] = useState({});\n  const [selectedSpot, setSelectedSpot] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    fetch('/data/parking.json').then(res => res.json()).then(data => setParkingData(data)).catch(err => console.error('Error loading parking data:', err));\n  }, []);\n  const handleLevelChange = level => {\n    setCurrentLevel(level);\n  };\n  const getSpotColor = spot => {\n    if (spot.status === 'occupied') return {\n      color: 'red',\n      image: '/icons/occupied.png'\n    };\n    if (spot.status === 'soon_free') return {\n      color: 'yellow',\n      image: '/icons/soon_free.png'\n    };\n    if (spot.status === 'claimed') return {\n      color: 'green',\n      image: '/icons/claimed.png'\n    };\n    if (spot.status === 'free' && carSize === 'medium' && spot.size === 'small' || carSize === 'large' && (spot.size === 'small' || spot.size === 'medium')) {\n      return {\n        color: 'red',\n        image: '/icons/occupied.png'\n      };\n    }\n    if (spot.status === 'free') {\n      return {\n        color: 'gray',\n        image: '/icons/free.png'\n      };\n    }\n    return {\n      color: 'gray',\n      image: '/icons/default.png'\n    };\n  };\n  const handleSpotClick = spot => {\n    if (spot.status === 'free') {\n      setSelectedSpot(spot);\n      setShowModal(true);\n    }\n  };\n  const handleModalClose = () => {\n    setShowModal(false);\n    setSelectedSpot(null);\n  };\n  const handleConfirmSelection = () => {\n    if (selectedSpot) {\n      console.log('Spot selected:', selectedSpot);\n    }\n    setShowModal(false);\n  };\n  const spots = parkingData[currentLevel] || [];\n  return {\n    currentLevel,\n    spots,\n    handleLevelChange,\n    getSpotColor,\n    handleSpotClick,\n    showModal,\n    handleModalClose,\n    handleConfirmSelection\n  };\n};\n_s(usePlotPickerLogic, \"p1NQmdIKwaKxpXBhlACNAof9VpQ=\");","map":{"version":3,"names":["useState","useEffect","usePlotPickerLogic","carSize","_s","currentLevel","setCurrentLevel","parkingData","setParkingData","selectedSpot","setSelectedSpot","showModal","setShowModal","fetch","then","res","json","data","catch","err","console","error","handleLevelChange","level","getSpotColor","spot","status","color","image","size","handleSpotClick","handleModalClose","handleConfirmSelection","log","spots"],"sources":["C:/Users/Imi/Desktop/SFM_Project/sfm-dunapart-frontend/src/components/plot/PlotPickerLogic.js"],"sourcesContent":["// PlotPickerLogic.js\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const usePlotPickerLogic = (carSize) => {\r\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\r\n  const [parkingData, setParkingData] = useState({});\r\n  const [selectedSpot, setSelectedSpot] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('/data/parking.json')\r\n      .then((res) => res.json())\r\n      .then((data) => setParkingData(data))\r\n      .catch((err) => console.error('Error loading parking data:', err));\r\n  }, []);\r\n\r\n  const handleLevelChange = (level) => {\r\n    setCurrentLevel(level);\r\n  };\r\n\r\n  const getSpotColor = (spot) => {\r\n    if (spot.status === 'occupied') return { color: 'red', image: '/icons/occupied.png' };\r\n    if (spot.status === 'soon_free') return { color: 'yellow', image: '/icons/soon_free.png' };\r\n    if (spot.status === 'claimed') return { color: 'green', image: '/icons/claimed.png' };\r\n    if (spot.status === 'free' && (carSize === 'medium' && spot.size === 'small') || \r\n        (carSize === 'large' && (spot.size === 'small' || spot.size === 'medium'))) {\r\n      return { color: 'red', image: '/icons/occupied.png' };\r\n    }\r\n    if (spot.status === 'free') {\r\n      return { color: 'gray', image: '/icons/free.png' };\r\n    }\r\n    return { color: 'gray', image: '/icons/default.png' };\r\n  };\r\n\r\n  const handleSpotClick = (spot) => {\r\n    if (spot.status === 'free') {\r\n      setSelectedSpot(spot);\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n    setSelectedSpot(null);\r\n  };\r\n\r\n  const handleConfirmSelection = () => {\r\n    if (selectedSpot) {\r\n      console.log('Spot selected:', selectedSpot);\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  const spots = parkingData[currentLevel] || [];\r\n\r\n  return {\r\n    currentLevel,\r\n    spots,\r\n    handleLevelChange,\r\n    getSpotColor,\r\n    handleSpotClick,\r\n    showModal,\r\n    handleModalClose,\r\n    handleConfirmSelection,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}