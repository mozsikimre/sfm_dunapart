{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imi\\\\Desktop\\\\SFM_Project\\\\sfm-dunapart-frontend\\\\src\\\\components\\\\plot\\\\PlotPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PlotPicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport carSize from '../../data/car.json';\nimport Parking from '../../data/parking.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(carSize);\nconsole.log(Parking);\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\nfunction PlotPicker() {\n  _s();\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\n  const [carSize, setCarSize] = useState('');\n  const [parkingData, setParkingData] = useState({});\n  const navigate = useNavigate();\n\n  // Autó méretének betöltése\n  useEffect(() => {\n    fetch(carSize).then(res => res.json()).then(data => setCarSize(data.carSize)).catch(err => console.error('Error loading car size:', err));\n  }, []);\n\n  // Parkolóhelyek betöltése\n  useEffect(() => {\n    fetch(Parking).then(res => res.json()).then(data => {\n      // Status frissítése timeUntilFree alapján\n      const updatedData = {};\n      for (const level in data) {\n        updatedData[level] = data[level].map(spot => ({\n          ...spot,\n          status: spot.timeUntilFree === 0 ? 'free' : spot.timeUntilFree < 30 ? 'soon_free' : 'occupied'\n        }));\n      }\n      setParkingData(updatedData);\n    }).catch(err => console.error('Error loading parking data:', err));\n  }, []);\n  const handleLevelChange = level => {\n    setCurrentLevel(level);\n  };\n  const getSpotColor = spot => {\n    if (spot.status === 'occupied') return 'red';\n    if (spot.status === 'soon_free') return 'yellow';\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\n    return 'gray';\n  };\n  const spots = parkingData[currentLevel] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel-green\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-picker-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick a parking spot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-buttons\",\n          children: levels.map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: level === currentLevel ? 'active' : '',\n            onClick: () => handleLevelChange(level),\n            children: level\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parking-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parking-container-top\",\n            children: spots.slice(0, 10).map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `parking-spot ${getSpotColor(spot)}`,\n              children: spot.id\n            }, spot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parking-container-left\",\n            children: spots.slice(25, 30).reverse().map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `parking-spot ${getSpotColor(spot)}`,\n              children: spot.id\n            }, spot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parking-container-bottom\",\n            children: spots.slice(15, 25).reverse().map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `parking-spot ${getSpotColor(spot)}`,\n              children: spot.id\n            }, spot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parking-container-right\",\n            children: spots.slice(10, 15).map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `parking-spot ${getSpotColor(spot)}`,\n              children: spot.id\n            }, spot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parking-container-middle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lift-base\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lift-top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lift-bottom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PlotPicker, \"0qW4C4M0v0fnoGrZnLtwrlRjqPE=\", false, function () {\n  return [useNavigate];\n});\n_c = PlotPicker;\nexport default PlotPicker;\nvar _c;\n$RefreshReg$(_c, \"PlotPicker\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","carSize","Parking","jsxDEV","_jsxDEV","console","log","levels","PlotPicker","_s","currentLevel","setCurrentLevel","setCarSize","parkingData","setParkingData","navigate","fetch","then","res","json","data","catch","err","error","updatedData","level","map","spot","status","timeUntilFree","handleLevelChange","getSpotColor","size","spots","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","id","reverse","_c","$RefreshReg$"],"sources":["C:/Users/Imi/Desktop/SFM_Project/sfm-dunapart-frontend/src/components/plot/PlotPicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PlotPicker.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport carSize from '../../data/car.json';\r\nimport Parking from '../../data/parking.json';\r\nconsole.log(carSize);\r\nconsole.log(Parking);\r\n\r\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\r\n\r\nfunction PlotPicker() {\r\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\r\n  const [carSize, setCarSize] = useState('');\r\n  const [parkingData, setParkingData] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // Autó méretének betöltése\r\n  useEffect(() => {\r\n    fetch(carSize)\r\n      .then((res) => res.json())\r\n      .then((data) => setCarSize(data.carSize))\r\n      .catch((err) => console.error('Error loading car size:', err));\r\n  }, []);\r\n\r\n  // Parkolóhelyek betöltése\r\n  useEffect(() => {\r\n    fetch(Parking)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // Status frissítése timeUntilFree alapján\r\n        const updatedData = {};\r\n        for (const level in data) {\r\n          updatedData[level] = data[level].map((spot) => ({\r\n            ...spot,\r\n            status:\r\n              spot.timeUntilFree === 0\r\n                ? 'free'\r\n                : spot.timeUntilFree < 30\r\n                ? 'soon_free'\r\n                : 'occupied',\r\n          }));\r\n        }\r\n        setParkingData(updatedData);\r\n      })\r\n      .catch((err) => console.error('Error loading parking data:', err));\r\n  }, []);\r\n\r\n  const handleLevelChange = (level) => {\r\n    setCurrentLevel(level);\r\n  };\r\n\r\n  const getSpotColor = (spot) => {\r\n    if (spot.status === 'occupied') return 'red';\r\n    if (spot.status === 'soon_free') return 'yellow';\r\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\r\n    return 'gray';\r\n  };\r\n\r\n  const spots = parkingData[currentLevel] || [];\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"left-panel-green\">\r\n        <button className=\"back-button\" onClick={() => navigate('/')}>\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n      <div className=\"right-panel\">\r\n        <div className=\"plot-picker-container\">\r\n          <h1>Pick a parking spot</h1>\r\n\r\n          <div className=\"level-buttons\">\r\n            {levels.map((level) => (\r\n              <button\r\n                key={level}\r\n                className={level === currentLevel ? 'active' : ''}\r\n                onClick={() => handleLevelChange(level)}\r\n              >\r\n                {level}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"parking-layout\">\r\n            <div className=\"parking-container-top\">\r\n              {spots.slice(0, 10).map((spot) => (\r\n                <div key={spot.id} className={`parking-spot ${getSpotColor(spot)}`}>\r\n                  {spot.id}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"parking-container-left\">\r\n              {spots.slice(25, 30).reverse().map((spot) => (\r\n                <div key={spot.id} className={`parking-spot ${getSpotColor(spot)}`}>\r\n                  {spot.id}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"parking-container-bottom\">\r\n              {spots.slice(15, 25).reverse().map((spot) => (\r\n                <div key={spot.id} className={`parking-spot ${getSpotColor(spot)}`}>\r\n                  {spot.id}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"parking-container-right\">\r\n              {spots.slice(10, 15).map((spot) => (\r\n                <div key={spot.id} className={`parking-spot ${getSpotColor(spot)}`}>\r\n                  {spot.id}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"parking-container-middle\">\r\n              <div className=\"lift-base\">\r\n                <div className=\"lift-top\"></div>\r\n                <div className=\"lift-bottom\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlotPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}