{"ast":null,"code":"var _s = $RefreshSig$();\n// PlotPicker.js\n\nimport { useState } from 'react';\nimport PlotPickerUI from './plotPickerUI';\n\n// Példa parkolóhelyek adatstruktúrája\nconst parkingData = {\n  '-1st floor': [{\n    id: 1,\n    status: \"occupied\",\n    size: \"large\"\n  }, {\n    id: 2,\n    status: \"free\",\n    size: \"medium\"\n  }, {\n    id: 3,\n    status: \"free\",\n    size: \"small\"\n  }\n  // Add more spots as needed\n  ],\n  '-2nd floor': [{\n    id: 31,\n    status: 'free',\n    size: 'large'\n  }, {\n    id: 32,\n    status: 'occupied',\n    size: 'small'\n  }, {\n    id: 33,\n    status: 'free',\n    size: 'medium'\n  }\n  // Add more spots as needed\n  ],\n  '-3rd floor': [{\n    id: 61,\n    status: 'soon_free',\n    size: 'medium'\n  }, {\n    id: 62,\n    status: 'free',\n    size: 'large'\n  }, {\n    id: 63,\n    status: 'soon_free',\n    size: 'small'\n  }\n  // Add more spots as needed\n  ]\n};\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\nfunction useParkingLogic() {\n  _s();\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\n  const [carSize, setCarSize] = useState('medium'); // autó mérete\n\n  const handleLevelChange = level => {\n    setCurrentLevel(level);\n  };\n  const getSpotColor = spot => {\n    if (spot.status === 'occupied') return 'red';\n    if (spot.status === 'soon_free') return 'yellow';\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\n    return 'gray';\n  };\n  const spots = parkingData[currentLevel];\n  return {\n    currentLevel,\n    carSize,\n    levels,\n    spots,\n    handleLevelChange,\n    getSpotColor\n  };\n}\n_s(useParkingLogic, \"76frQozsMSLvrykreGy4abFOzzc=\");\nexport default PlotPicker;","map":{"version":3,"names":["useState","PlotPickerUI","parkingData","id","status","size","levels","useParkingLogic","_s","currentLevel","setCurrentLevel","carSize","setCarSize","handleLevelChange","level","getSpotColor","spot","spots","PlotPicker"],"sources":["C:/Users/Imi/Desktop/SFM_Project/sfm-dunapart-frontend/src/components/plot/PlotPicker.js"],"sourcesContent":["// PlotPicker.js\r\n\r\nimport { useState } from 'react';\r\nimport PlotPickerUI from './plotPickerUI';\r\n\r\n// Példa parkolóhelyek adatstruktúrája\r\nconst parkingData = {\r\n  '-1st floor': [\r\n    { id: 1, status: \"occupied\", size: \"large\" },\r\n    { id: 2, status: \"free\", size: \"medium\" },\r\n    { id: 3, status: \"free\", size: \"small\" },\r\n    // Add more spots as needed\r\n  ],\r\n  '-2nd floor': [\r\n    { id: 31, status: 'free', size: 'large' },\r\n    { id: 32, status: 'occupied', size: 'small' },\r\n    { id: 33, status: 'free', size: 'medium' },\r\n    // Add more spots as needed\r\n  ],\r\n  '-3rd floor': [\r\n    { id: 61, status: 'soon_free', size: 'medium' },\r\n    { id: 62, status: 'free', size: 'large' },\r\n    { id: 63, status: 'soon_free', size: 'small' },\r\n    // Add more spots as needed\r\n  ],\r\n};\r\n\r\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\r\n\r\nfunction useParkingLogic() {\r\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\r\n  const [carSize, setCarSize] = useState('medium'); // autó mérete\r\n\r\n  const handleLevelChange = (level) => {\r\n    setCurrentLevel(level);\r\n  };\r\n\r\n  const getSpotColor = (spot) => {\r\n    if (spot.status === 'occupied') return 'red';\r\n    if (spot.status === 'soon_free') return 'yellow';\r\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\r\n    return 'gray';\r\n  };\r\n\r\n  const spots = parkingData[currentLevel];\r\n\r\n  return {\r\n    currentLevel,\r\n    carSize,\r\n    levels,\r\n    spots,\r\n    handleLevelChange,\r\n    getSpotColor,\r\n  };\r\n}\r\n\r\nexport default PlotPicker;\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AACA,MAAMC,WAAW,GAAG;EAClB,YAAY,EAAE,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAQ;EACvC;EAAA,CACD;EACD,YAAY,EAAE,CACZ;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACzC;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7C;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAS;EACzC;EAAA,CACD;EACD,YAAY,EAAE,CACZ;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC/C;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACzC;IAAEF,EAAE,EAAE,EAAE;IAAEC,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAQ;EAC7C;EAAA;AAEJ,CAAC;AAED,MAAMC,MAAM,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;AAEzD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,YAAY,CAAC;EAC9D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAElD,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,eAAe,CAACI,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,IAAIA,IAAI,CAACZ,MAAM,KAAK,UAAU,EAAE,OAAO,KAAK;IAC5C,IAAIY,IAAI,CAACZ,MAAM,KAAK,WAAW,EAAE,OAAO,QAAQ;IAChD,IAAIY,IAAI,CAACZ,MAAM,KAAK,MAAM,IAAIY,IAAI,CAACX,IAAI,KAAKM,OAAO,EAAE,OAAO,OAAO;IACnE,OAAO,MAAM;EACf,CAAC;EAED,MAAMM,KAAK,GAAGf,WAAW,CAACO,YAAY,CAAC;EAEvC,OAAO;IACLA,YAAY;IACZE,OAAO;IACPL,MAAM;IACNW,KAAK;IACLJ,iBAAiB;IACjBE;EACF,CAAC;AACH;AAACP,EAAA,CAzBQD,eAAe;AA2BxB,eAAeW,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}