{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imi\\\\Desktop\\\\SFM_Project\\\\sfm-dunapart-frontend\\\\src\\\\components\\\\plot\\\\PlotPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './plotPicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\n\n// Példa parkolóhelyek adatstruktúrája\nconst parkingData = {\n  '-1st floor': [{\n    id: 1,\n    status: 'occupied',\n    size: 'large'\n  }, {\n    id: 2,\n    status: 'free',\n    size: 'medium'\n  }, {\n    id: 3,\n    status: 'free',\n    size: 'small'\n  }, {\n    id: 4,\n    status: 'occupied',\n    size: 'large'\n  }, {\n    id: 5,\n    status: 'free',\n    size: 'medium'\n  }, {\n    id: 6,\n    status: 'soon_free',\n    size: 'small'\n  }\n  // Add more spots as needed\n  ],\n  '-2nd floor': [{\n    id: 7,\n    status: 'free',\n    size: 'large'\n  }, {\n    id: 8,\n    status: 'occupied',\n    size: 'small'\n  }\n  // Add more spots as needed\n  ],\n  '-3rd floor': [{\n    id: 9,\n    status: 'soon_free',\n    size: 'medium'\n  }, {\n    id: 10,\n    status: 'free',\n    size: 'large'\n  }\n  // Add more spots as needed\n  ]\n};\nfunction PlotPicker() {\n  _s();\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\n  const [carSize, setCarSize] = useState('medium'); // autó mérete\n\n  const handleLevelChange = level => {\n    setCurrentLevel(level);\n  };\n  const getSpotColor = spot => {\n    if (spot.status === 'occupied') return 'red';\n    if (spot.status === 'soon_free') return 'yellow';\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\n    return 'gray';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plot-picker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick a parking spot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-buttons\",\n      children: levels.map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: level === currentLevel ? 'active' : '',\n        onClick: () => handleLevelChange(level),\n        children: level\n      }, level, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parking-layout\",\n      children: parkingData[currentLevel].map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-spot\",\n        style: {\n          backgroundColor: getSpotColor(spot)\n        },\n        children: spot.id\n      }, spot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(PlotPicker, \"76frQozsMSLvrykreGy4abFOzzc=\");\n_c = PlotPicker;\nexport default PlotPicker;\nvar _c;\n$RefreshReg$(_c, \"PlotPicker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","levels","parkingData","id","status","size","PlotPicker","_s","currentLevel","setCurrentLevel","carSize","setCarSize","handleLevelChange","level","getSpotColor","spot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Imi/Desktop/SFM_Project/sfm-dunapart-frontend/src/components/plot/PlotPicker.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './plotPicker.css';\r\n\r\nconst levels = ['-1st floor', '-2nd floor', '-3rd floor'];\r\n\r\n// Példa parkolóhelyek adatstruktúrája\r\nconst parkingData = {\r\n  '-1st floor': [\r\n    { id: 1, status: 'occupied', size: 'large' },\r\n    { id: 2, status: 'free', size: 'medium' },\r\n    { id: 3, status: 'free', size: 'small' },\r\n    { id: 4, status: 'occupied', size: 'large' },\r\n    { id: 5, status: 'free', size: 'medium' },\r\n    { id: 6, status: 'soon_free', size: 'small' },\r\n    // Add more spots as needed\r\n  ],\r\n  '-2nd floor': [\r\n    { id: 7, status: 'free', size: 'large' },\r\n    { id: 8, status: 'occupied', size: 'small' },\r\n    // Add more spots as needed\r\n  ],\r\n  '-3rd floor': [\r\n    { id: 9, status: 'soon_free', size: 'medium' },\r\n    { id: 10, status: 'free', size: 'large' },\r\n    // Add more spots as needed\r\n  ],\r\n};\r\n\r\nfunction PlotPicker() {\r\n  const [currentLevel, setCurrentLevel] = useState('-1st floor');\r\n  const [carSize, setCarSize] = useState('medium'); // autó mérete\r\n\r\n  const handleLevelChange = (level) => {\r\n    setCurrentLevel(level);\r\n  };\r\n\r\n  const getSpotColor = (spot) => {\r\n    if (spot.status === 'occupied') return 'red';\r\n    if (spot.status === 'soon_free') return 'yellow';\r\n    if (spot.status === 'free' && spot.size === carSize) return 'green';\r\n    return 'gray';\r\n  };\r\n\r\n  return (\r\n    <div className=\"plot-picker-container\">\r\n      <h1>Pick a parking spot</h1>\r\n      \r\n      <div className=\"level-buttons\">\r\n        {levels.map((level) => (\r\n          <button\r\n            key={level}\r\n            className={level === currentLevel ? 'active' : ''}\r\n            onClick={() => handleLevelChange(level)}\r\n          >\r\n            {level}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"parking-layout\">\r\n        {parkingData[currentLevel].map((spot) => (\r\n          <div\r\n            key={spot.id}\r\n            className=\"parking-spot\"\r\n            style={{ backgroundColor: getSpotColor(spot) }}\r\n          >\r\n            {spot.id}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlotPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}