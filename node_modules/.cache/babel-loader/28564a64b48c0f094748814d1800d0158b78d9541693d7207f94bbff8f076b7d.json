{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imi\\\\Desktop\\\\SFM_Project\\\\sfm-dunapart-frontend\\\\src\\\\components\\\\plot\\\\plotPickerUI.js\",\n  _s = $RefreshSig$();\n// PlotPickerUI.js\n\nimport React from 'react';\nimport useParkingLogic from './PlotPicker'; // importáljuk a logikát\nimport './plotPicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlotPickerUI() {\n  _s();\n  const {\n    currentLevel,\n    levels,\n    spots,\n    handleLevelChange,\n    getSpotColor\n  } = useParkingLogic(); // Használjuk a logikai részt\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plot-picker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick a parking spot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-buttons\",\n      children: levels.map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: level === currentLevel ? 'active' : '',\n        onClick: () => handleLevelChange(level),\n        children: level\n      }, level, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parking-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-container-top\",\n        children: spots.slice(0, 10).map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `parking-spot ${getSpotColor(spot)}`,\n          children: spot.id\n        }, spot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-container-left\",\n        children: spots.slice(25, 30).reverse().map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `parking-spot ${getSpotColor(spot)}`,\n          children: spot.id\n        }, spot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-container-bottom\",\n        children: spots.slice(15, 25).reverse().map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `parking-spot ${getSpotColor(spot)}`,\n          children: spot.id\n        }, spot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-container-right\",\n        children: spots.slice(10, 15).map(spot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `parking-spot ${getSpotColor(spot)}`,\n          children: spot.id\n        }, spot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parking-container-middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lift-base\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lift-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lift-bottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(PlotPickerUI, \"xxMUQ8rANojbX0Ha7sa8fddAXn4=\", false, function () {\n  return [useParkingLogic];\n});\n_c = PlotPickerUI;\nexport default PlotPickerUI;\nvar _c;\n$RefreshReg$(_c, \"PlotPickerUI\");","map":{"version":3,"names":["React","useParkingLogic","jsxDEV","_jsxDEV","PlotPickerUI","_s","currentLevel","levels","spots","handleLevelChange","getSpotColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","level","onClick","slice","spot","id","reverse","_c","$RefreshReg$"],"sources":["C:/Users/Imi/Desktop/SFM_Project/sfm-dunapart-frontend/src/components/plot/plotPickerUI.js"],"sourcesContent":["// PlotPickerUI.js\r\n\r\nimport React from 'react';\r\nimport useParkingLogic from './PlotPicker'; // importáljuk a logikát\r\nimport './plotPicker.css';\r\n\r\nfunction PlotPickerUI() {\r\n  const {\r\n    currentLevel,\r\n    levels,\r\n    spots,\r\n    handleLevelChange,\r\n    getSpotColor,\r\n  } = useParkingLogic(); // Használjuk a logikai részt\r\n\r\n  return (\r\n    <div className=\"plot-picker-container\">\r\n      <h1>Pick a parking spot</h1>\r\n\r\n      <div className=\"level-buttons\">\r\n        {levels.map((level) => (\r\n          <button\r\n            key={level}\r\n            className={level === currentLevel ? 'active' : ''}\r\n            onClick={() => handleLevelChange(level)}\r\n          >\r\n            {level}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"parking-layout\">\r\n        {/* First 10 spots */}\r\n        <div className=\"parking-container-top\">\r\n          {spots.slice(0, 10).map((spot) => (\r\n            <div\r\n              key={spot.id}\r\n              className={`parking-spot ${getSpotColor(spot)}`}\r\n            >\r\n              {spot.id}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Next 5 spots */}\r\n        <div className=\"parking-container-left\">\r\n          {spots.slice(25, 30).reverse().map((spot) => (\r\n            <div\r\n              key={spot.id}\r\n              className={`parking-spot ${getSpotColor(spot)}`}\r\n            >\r\n              {spot.id}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Next 10 spots */}\r\n        <div className=\"parking-container-bottom\">\r\n          {spots.slice(15, 25).reverse().map((spot) => (\r\n            <div\r\n              key={spot.id}\r\n              className={`parking-spot ${getSpotColor(spot)}`}\r\n            >\r\n              {spot.id}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Last 5 spots */}\r\n        <div className=\"parking-container-right\">\r\n          {spots.slice(10, 15).map((spot) => (\r\n            <div\r\n              key={spot.id}\r\n              className={`parking-spot ${getSpotColor(spot)}`}\r\n            >\r\n              {spot.id}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"parking-container-middle\">\r\n          <div className=\"lift-base\">\r\n            <div className=\"lift-top\"></div>\r\n            <div className=\"lift-bottom\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlotPickerUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}